// Compute Shader for handling particle systems kinematics.
struct ParticleData
{
	vec4 position; //only x,y,z are used
	vec4 velocity; //only x,y,z are used
};

layout(std430,binding=0) buffer Foo
{
	ParticleData particles[];
};

layout(local_size_x=64,local_size_y=1,local_size_z=1) in;

void main()
{
	uint idx = uint(gl_GlobalInvocationID.x);
	vec3 p = particles[idx].position.xyz;
	vec3 v = particles[idx].velocity.xyz;
	p = p + elapsed * v;
	v = v + elapsed * gravity;
	particles[idx].position.xyz = p;
	particles[idx].velocity.xyz = v;
}